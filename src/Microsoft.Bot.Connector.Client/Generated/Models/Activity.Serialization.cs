// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Microsoft.Bot.Connector.Client.Models
{
    public partial class Activity : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            if (Optional.IsDefined(Type))
            {
                writer.WritePropertyName("type");
                writer.WriteStringValue(Type);
            }
            if (Optional.IsDefined(Id))
            {
                writer.WritePropertyName("id");
                writer.WriteStringValue(Id);
            }
            if (Optional.IsDefined(Timestamp))
            {
                writer.WritePropertyName("timestamp");
                writer.WriteStringValue(Timestamp.Value, "O");
            }
            if (Optional.IsDefined(LocalTimestamp))
            {
                writer.WritePropertyName("localTimestamp");
                writer.WriteStringValue(LocalTimestamp.Value, "O");
            }
            if (Optional.IsDefined(LocalTimezone))
            {
                writer.WritePropertyName("localTimezone");
                writer.WriteStringValue(LocalTimezone);
            }
            if (Optional.IsDefined(CallerId))
            {
                writer.WritePropertyName("callerId");
                writer.WriteStringValue(CallerId);
            }
            if (Optional.IsDefined(ServiceUrl))
            {
                writer.WritePropertyName("serviceUrl");
                writer.WriteStringValue(ServiceUrl);
            }
            if (Optional.IsDefined(ChannelId))
            {
                writer.WritePropertyName("channelId");
                writer.WriteStringValue(ChannelId);
            }
            if (Optional.IsDefined(From))
            {
                writer.WritePropertyName("from");
                writer.WriteObjectValue(From);
            }
            if (Optional.IsDefined(Conversation))
            {
                writer.WritePropertyName("conversation");
                writer.WriteObjectValue(Conversation);
            }
            if (Optional.IsDefined(Recipient))
            {
                writer.WritePropertyName("recipient");
                writer.WriteObjectValue(Recipient);
            }
            if (Optional.IsDefined(TextFormat))
            {
                writer.WritePropertyName("textFormat");
                writer.WriteStringValue(TextFormat);
            }
            if (Optional.IsDefined(AttachmentLayout))
            {
                writer.WritePropertyName("attachmentLayout");
                writer.WriteStringValue(AttachmentLayout);
            }
            if (Optional.IsCollectionDefined(MembersAdded))
            {
                writer.WritePropertyName("membersAdded");
                writer.WriteStartArray();
                foreach (var item in MembersAdded)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(MembersRemoved))
            {
                writer.WritePropertyName("membersRemoved");
                writer.WriteStartArray();
                foreach (var item in MembersRemoved)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ReactionsAdded))
            {
                writer.WritePropertyName("reactionsAdded");
                writer.WriteStartArray();
                foreach (var item in ReactionsAdded)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(ReactionsRemoved))
            {
                writer.WritePropertyName("reactionsRemoved");
                writer.WriteStartArray();
                foreach (var item in ReactionsRemoved)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(TopicName))
            {
                writer.WritePropertyName("topicName");
                writer.WriteStringValue(TopicName);
            }
            if (Optional.IsDefined(HistoryDisclosed))
            {
                writer.WritePropertyName("historyDisclosed");
                writer.WriteBooleanValue(HistoryDisclosed.Value);
            }
            if (Optional.IsDefined(Locale))
            {
                writer.WritePropertyName("locale");
                writer.WriteStringValue(Locale);
            }
            if (Optional.IsDefined(Text))
            {
                writer.WritePropertyName("text");
                writer.WriteStringValue(Text);
            }
            if (Optional.IsDefined(Speak))
            {
                writer.WritePropertyName("speak");
                writer.WriteStringValue(Speak);
            }
            if (Optional.IsDefined(InputHint))
            {
                writer.WritePropertyName("inputHint");
                writer.WriteStringValue(InputHint);
            }
            if (Optional.IsDefined(Summary))
            {
                writer.WritePropertyName("summary");
                writer.WriteStringValue(Summary);
            }
            if (Optional.IsDefined(SuggestedActions))
            {
                writer.WritePropertyName("suggestedActions");
                writer.WriteObjectValue(SuggestedActions);
            }
            if (Optional.IsCollectionDefined(Attachments))
            {
                writer.WritePropertyName("attachments");
                writer.WriteStartArray();
                foreach (var item in Attachments)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(Entities))
            {
                writer.WritePropertyName("entities");
                writer.WriteStartArray();
                foreach (var item in Entities)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(ChannelData))
            {
                writer.WritePropertyName("channelData");
                writer.WriteObjectValue(ChannelData);
            }
            if (Optional.IsDefined(Action))
            {
                writer.WritePropertyName("action");
                writer.WriteStringValue(Action);
            }
            if (Optional.IsDefined(ReplyToId))
            {
                writer.WritePropertyName("replyToId");
                writer.WriteStringValue(ReplyToId);
            }
            if (Optional.IsDefined(Label))
            {
                writer.WritePropertyName("label");
                writer.WriteStringValue(Label);
            }
            if (Optional.IsDefined(ValueType))
            {
                writer.WritePropertyName("valueType");
                writer.WriteStringValue(ValueType);
            }
            if (Optional.IsDefined(Value))
            {
                writer.WritePropertyName("value");
                writer.WriteObjectValue(Value);
            }
            if (Optional.IsDefined(Name))
            {
                writer.WritePropertyName("name");
                writer.WriteStringValue(Name);
            }
            if (Optional.IsDefined(RelatesTo))
            {
                writer.WritePropertyName("relatesTo");
                writer.WriteObjectValue(RelatesTo);
            }
            if (Optional.IsDefined(Code))
            {
                writer.WritePropertyName("code");
                writer.WriteStringValue(Code);
            }
            if (Optional.IsDefined(Expiration))
            {
                writer.WritePropertyName("expiration");
                writer.WriteStringValue(Expiration.Value, "O");
            }
            if (Optional.IsDefined(Importance))
            {
                writer.WritePropertyName("importance");
                writer.WriteStringValue(Importance);
            }
            if (Optional.IsDefined(DeliveryMode))
            {
                writer.WritePropertyName("deliveryMode");
                writer.WriteStringValue(DeliveryMode);
            }
            if (Optional.IsCollectionDefined(ListenFor))
            {
                writer.WritePropertyName("listenFor");
                writer.WriteStartArray();
                foreach (var item in ListenFor)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsCollectionDefined(TextHighlights))
            {
                writer.WritePropertyName("textHighlights");
                writer.WriteStartArray();
                foreach (var item in TextHighlights)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Optional.IsDefined(SemanticAction))
            {
                writer.WritePropertyName("semanticAction");
                writer.WriteObjectValue(SemanticAction);
            }
            writer.WriteEndObject();
        }
    }
}
